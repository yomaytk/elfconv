diff --git a/Makefile b/Makefile
index fc60702..05c03e6 100644
--- a/Makefile
+++ b/Makefile
@@ -1,2 +1,11 @@
-all:
-	gcc mnist.c mnist_file.c neural_network.c -lm -o mnist
+CC=gcc
+
+mnist_aarch64:
+	@ARCH=$$( uname -m ); \
+	if [ "$$ARCH" = "x86_64" ]; then \
+			$(CC) -static -O3 -o mnist.aarch64 --target=aarch64-linux-gnu --gcc-toolchain=/usr --sysroot=/usr/aarch64-linux-gnu mnist.c mnist_file.c neural_network.c -lm; \
+	elif [ "$$ARCH" = "aarch64" ]; then \
+			$(CC) -static -O3 -o mnist.aarch64 mnist.c mnist_file.c neural_network.c -lm; \
+	else \
+			echo "Unknown architecture"; exit 1; \
+	fi
diff --git a/mnist.c b/mnist.c
index d6b6cf3..7038cee 100644
--- a/mnist.c
+++ b/mnist.c
@@ -2,11 +2,12 @@
 #include <stdlib.h>
 #include <stdint.h>
 #include <math.h>
+#include <time.h>
 
 #include "include/mnist_file.h"
 #include "include/neural_network.h"
 
-#define STEPS 1000
+#define STEPS 30
 #define BATCH_SIZE 100
 
 /**
@@ -48,8 +49,16 @@ float calculate_accuracy(mnist_dataset_t * dataset, neural_network_t * network)
     return ((float) correct) / ((float) dataset->size);
 }
 
+static double second(void)
+
+{
+  return ((double) ((double) clock() / (double) CLOCKS_PER_SEC));
+}
+
 int main(int argc, char *argv[])
 {
+    double s_time = second();  
+
     mnist_dataset_t * train_dataset, * test_dataset;
     mnist_dataset_t batch;
     neural_network_t network;
@@ -83,5 +92,8 @@ int main(int argc, char *argv[])
     mnist_free_dataset(train_dataset);
     mnist_free_dataset(test_dataset);
 
+    double e_time = second();
+    printf("elapsed time: %f\n", e_time - s_time);
+
     return 0;
 }
